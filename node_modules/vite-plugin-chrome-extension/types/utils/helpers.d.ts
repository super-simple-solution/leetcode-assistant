import { OutputOptions } from "rollup";
import { OutputAsset, OutputChunk, OutputBundle } from "rollup";
import { OutputChunkBundle } from "../common/models";
import { ChromeExtensionManifest } from "../manifest.v2";
export declare const not: <T>(fn: (x: T) => boolean) => (x: T) => boolean;
export declare function isChunk(x: OutputChunk | OutputAsset): x is OutputChunk;
export declare function isOutputOptions(x: any): x is OutputOptions;
export declare function isAsset(x: OutputChunk | OutputAsset): x is OutputAsset;
export declare function isString(x: any): x is string;
export declare function isJsonFilePath(x: any): x is string;
export declare const normalizeFilename: (p: string) => string;
export declare function getOutputFilenameFromChunk(sourceFileName: string, chunks: OutputChunk[]): string;
export declare function findChunkByName(name: string, bundle: OutputBundle): OutputChunk | undefined;
export declare function findAssetByName(name: string, bundle: OutputBundle): OutputAsset | undefined;
export declare function findChunk(sourceFileName: string, chunks: OutputChunkBundle): OutputChunk | undefined;
/**
 * Update the manifest source in the output bundle
 */
export declare const updateManifest: (updater: (manifest: ChromeExtensionManifest) => ChromeExtensionManifest, bundle: OutputBundle, handleError?: ((message: string) => void) | undefined) => OutputBundle;
