import { OutputChunk, PluginContext } from "rollup";
import { ChromeExtensionManifest, ContentScript, WebAccessibleResource } from "../manifest";
import { DynamicImportWrapperOptions } from "./dynamicImportWrapper";
import { OutputChunkBundle } from "../common/models";
export declare function dedupe<T>(x: T[]): T[];
export declare function processContentScripts(manifest: ChromeExtensionManifest, chunks: OutputChunkBundle, srcDir: string): void;
export declare function generateContentScriptsWrapper(context: PluginContext, content_scripts: ContentScript[], web_accessible_resources: WebAccessibleResource[], manifest: ChromeExtensionManifest, chunks: OutputChunk[], srcDir: string): void;
/**
 * Create a dynamic import wrapper for background.js
 * @export
 * @param {PluginContext} context
 * @param {string} service_worker_path: the original path for service_work_path in original manifest.json
 * @param {DynamicImportWrapperOptions} dynamicImportWrapper: options for dynamic import wrapper
 * @param {OutputChunk[]} chunks: compiled chunks from rollup
 * @param {string} srcDir: absolute path for original manifest.json
 * @return {*} : path for generated wrapper file
 */
export declare function generateBackgroundScriptWrapper(context: PluginContext, service_worker_path: string, dynamicImportWrapper: DynamicImportWrapperOptions, chunks: OutputChunk[], srcDir: string): string;
export declare function generateManifest(context: PluginContext, manifest: ChromeExtensionManifest): void;
